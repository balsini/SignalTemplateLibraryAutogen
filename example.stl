///////////////////////////////////
// Definition of constant values //
///////////////////////////////////

T = 1;
T2 = T;
range = (0.3 + T) * 1.1;
range2 = 0.3 * T + 1.1;

stepSize = 5;

max = stepSize + range;
min = stepSize - range;

//////////////////////////////
// Definition of assertions //
//////////////////////////////

//[] [0.1 , 2] ( [] [0.1 , 2] (x < max) && (x > min));

/* [] [0.1 , 2] ( [] [0.1 , 2] (x < max) && (x > min)); */

/*
[] [0.1 , 2] ( [] [0.1 , 2] (x < max) && (x > min));
[] [0.1 , 2] ( [] [0.1 , 2] (x < max) && (x > min));
[] (0 , T] (SIG - REF < max);
*/

[] [0 , T] (isStep(SIGA, stepSize) && SIGA - REFA < max);

//[] (0 , T] (REFA + 1 < 2 * (3 + SIGA) && (SIGA > 5 || SIGA < 6));
//[] (0 , T] (SIGA < 11 && SIGA >= 0);
//[] (0 , T] (SIGA < 11 && SIGA >= 0);
//<> [1 , 2] (SIGA < 5);
//[] [0 , 4] (SIGA < 100 + 3 * 2 && REFA < 100 + 3 * 2);
//[] [0 , 4] (SIGA < 100 + 3 * 2 && REFA < 100 + 3 * 2);
//[] [0 , 4] (SIGA < 20);
//[] [0 , 4] (REFA < 5 U SIGA < 100 && REFA > 0 && REFA < 11);
//[] [0 , 4] (REFA < 5 && <> [0,1] SIGA < 100);
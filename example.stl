///////////////////////////////////
// Definition of constant values //
///////////////////////////////////

T = 1;
T2 = T;
range = (0.3 + T) * 1.1;
range2 = 0.3 * T + 1.1;

stepSize = 5;

max = stepSize + range;
min = stepSize - range;

//////////////////////////////
// Definition of assertions //
//////////////////////////////

//[] [0.1 , 2] ( [] [0.1 , 2] (x < max) && (x > min));

/* [] [0.1 , 2] ( [] [0.1 , 2] (x < max) && (x > min)); */

/*
[] [0.1 , 2] ( [] [0.1 , 2] (x < max) && (x > min));
[] [0.1 , 2] ( [] [0.1 , 2] (x < max) && (x > min));
[] (0 , T] (SIG - REF < max);

[] [0 , T] (isStep(SIG, stepSize) && SIG - REF < max);
*/

//[] (0 , T] (REFA + 1 < 2 * (3 + SIGA) && (SIGA > 5 || SIGA < 6));

[] (0 , T] (SIGA < 11 && SIGA >= 0);

// Proposition fails: when?
// -- The error is generated when the proposition results false
// How to interpret the relative (internal) time ranges?

// TODO
// Cleanup volatile memory
// Internal parser that checks the model input signals and considers them as ports
// <>
// Until
// Create matlab script that exports the signal names to file SF
// -- SF will be interpreted by the bison scanner and will use those signals as portsl